@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .form-control {
        width: 150px !important;
    }
</style>

<blockquote class="layui-elem-quote quoteBox">
    <div class="row">
        <div class="col-md-3 form-inline">
            <label class="layui-form-label">计划批次</label>
            <input type="text" class="form-control" id="PlanBatch" name="PlanBatch" autocomplete="off" />
        </div>
        <div class="col-md-3 form-inline">
            <label class="layui-form-label">计划批次名称</label>
            <input type="text" class="form-control" id="PlanName" name="PlanName" autocomplete="off" />
        </div>
        <div class="col-md-3 form-inline" style="width:320px">
            <label class="layui-form-label" style="width:140px">市级属地</label>
            <input type="text" class="form-control" id="CityPlace" name="CityPlace" autocomplete="off" />
        </div>
        <div class="col-md-3 form-inline" style="width:320px">
            <label class="layui-form-label" style="width:140px">招标模式</label>
            <input type="text" class="form-control" id="BidMode" name="BidMode" autocomplete="off" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 form-inline">
            <label class="layui-form-label">采购方式</label>
            <input type="text" class="form-control" id="BuildWay" name="BuildWay" autocomplete="off" />
        </div>
        <div class="col-md-3 form-inline">
            <label class="layui-form-label">招标年度</label>
            <input type="text" class="form-control" id="BidYear" name="BidYear" autocomplete="off" />
        </div>
        <div class="col-md-3 form-inline" style="width:320px">
            <label class="layui-form-label" style="width:140px">计划开始时间</label>
            <input type="text" class="form-control" id="PlanStartDt" name="PlanStartDt" autocomplete="off" />
        </div>
        <div class="col-md-3 form-inline" style="width:320px">
            <label class="layui-form-label" style="width:140px">计划结束时间</label>
            <input type="text" class="form-control" id="PlanEndDt" name="PlanEndDt" autocomplete="off" />
        </div>
        <div class="col-md-3 form-inline" style="width:200px">
            <button class="layui-btn search_btn" id="search" onclick="Reload()">搜索</button>
            <button class="layui-btn clear_btn" id="clear" onclick="Clear()">清空</button>
        </div>
    </div>
</blockquote>

<table class="layui-hide" id="dt" lay-filter="dt"></table>

<script id="toolbar" type="text/html">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="Import">导入</button>
        <button class="layui-btn layui-btn-sm" lay-event="Add">新增</button>
        <button class="layui-btn layui-btn-sm" lay-event="Modify">批量保存</button>
        <button class="layui-btn layui-btn-sm" lay-event="Remove">批量删除</button>
        <button class="layui-btn layui-btn-sm" onclick="Export()">导出</button>
    </div>
</script>

<script id="bar" type="text/html">
    <a class="layui-btn layui-btn-xs" lay-event="save">保存</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>

<script type="text/html" id="switchTpl" desc="切换开关">
    <input type="checkbox" name="sex" value="{{d.Period}}" lay-skin="switch" lay-text="是|空" lay-filter="sexDemo" {{ (d.Period== '是')?'checked' : '' }}>
</script>

<script>
    var tableData = [];
    var form = layui.form
        , layer = layui.layer
        , layedit = layui.layedit
        , laydate = layui.laydate
        , table = layui.table;

    layui.use(['form', 'layedit', 'laydate'], function () {
        //日期
        laydate.render({
            elem: '#PlanStartDt'
        });
        laydate.render({
            elem: '#PlanEndDt'
        });
        laydate.render({
            elem: '#BidYear',
            type: 'year'
        });
        //监听提交
        form.on('submit(search)', function (data) {
            table.reload("dt", {
                page: {
                    curr: 1
                },
                where: {
                    queryStr: JSON.stringify(data.field)
                }
            });
        });
    });

    table.render({
        elem: '#dt',
        url: '/PlanBatchInfo/GetPageData',
        toolbar: '#toolbar',
        title: '项目计划批次',
        height: 'full-175',
        cols: [[
            { type: 'checkbox', fixed: 'left' },
            { field: 'PlanBatch', title: '计划批次', width: 120, sort: true, fixed: 'left' },
            { field: 'PlanName', title: '计划批次名称', width: 80, edit: 'text' },
            { field: 'CityPlace', title: '市级属地', width: 100, edit: 'text' },
            { field: 'BidMode', title: '招标模式', width: 80, sort: true, edit: 'text' },
            { field: 'BuyWay', title: '采购方式', width: 80, sort: true, edit: 'text' },
            { field: 'BidYear', title: '招标年度', width: 120, edit: 'text' },
            { field: 'BidFlag', title: '招标紧急标识', width: 100, sort: true, edit: 'text' },
            {
                field: 'PlanCheckDt', title: '计划审查日期', width: 120, templet: function (res) {
                    return '<input type="text" autocomplete="off" '
                        + 'class="layui-input layui-input-date" '
                        + (res.PlanCheckDt != undefined ? ('value="' + res.PlanCheckDt + '"') : "")
                        + 'style="border:none;text-align:center;line-height:20px;height:30px">';
                }
            },
            { field: 'Status', title: '状态', width: 120, edit: 'text' },
            {
                field: 'PlanStartDt', title: '计划开始时间', width: 120, templet: function (res) {
                    return '<input type="text" autocomplete="off" '
                        + 'class="layui-input layui-input-date" '
                        + (res.PlanStartDt != undefined ? ('value="' + res.PlanStartDt) + '"' : "")
                        + 'style="border:none;text-align:center;line-height:20px;height:30px">';
                }
            },
            {
                field: 'PlanEndDt', title: '计划截至日期', width: 120, templet: function (res) {
                    return '<input type="text" autocomplete="off" '
                        + 'class="layui-input layui-input-date" '
                        + (res.PlanEndDt != undefined ? ('value="' + res.PlanEndDt + '"') : "")
                        + 'style="border:none;text-align:center;line-height:20px;height:30px">';
                }
            },
            {
                field: 'CityStartDt', title: '市计划开始时间', width: 120, templet: function (res) {
                    return '<input type="text" autocomplete="off" '
                        + 'class="layui-input layui-input-date" '
                        + (res.CityStartDt != undefined ? ('value="' + res.CityStartDt + '"') : "")
                        + 'style="border:none;text-align:center;line-height:20px;height:30px">';
                }
            },
            { field: 'Period', title: '招标模式细化', width: 180, edit: 'text' },
            { fixed: 'right', title: '操作', toolbar: '#bar', width: 130, fixed: 'right' }
        ]],
        page: true,
        done: function (res, curr, count) {
            tableData = layui.table.cache.dt;

            $('.layui-input-date').each(function () {
                laydate.render({
                    elem: this,
                    format: 'yyyy-MM-dd',
                    type: 'date',
                    trigger: 'click',
                    theme: '#393D49',
                    done: function (value, date, endDate) {
                        var dom = $(this)[0].elem;
                        $(dom).attr({ "value": value });
                        $($(dom).parent().parent()).attr({ "data-content": value });
                        var field = $(dom).parent().parent().attr("data-field");
                        var index = $(dom).parent().parent().parent().attr("data-index");
                        index = parseInt(index);
                        tableData[index][field] = value;
                    },
                    calendar: true,
                });
            });

            $($(".layui-table-tool-self").children().last()).css("display","none");
        },
    });

    //头工具栏事件
    table.on('toolbar(dt)', function (obj) {
        var checkStatus = table.checkStatus(obj.config.id);
        switch (obj.event) {
            case 'Import':
                var index = layui.layer.open({
                    title: "导入",
                    type: 2,
                    area: ['100%', '100%'],
                    content: "/PlanBatchInfo/Import",
                    btn: ['保存', '取消'],
                    btnAlign: 'c',
                    yes: function () {
                        var iframeWin = $("div.layui-layer-content > iframe")[0].contentWindow; //获取子页面对象
                        iframeWin.SaveExcelData();
                        var result = iframeWin.result;
                        if (result) {
                            if (result.code == 1) {
                                layer.close(index);
                                Reload();
                            }

                            layer.msg(result.msg, { icon: result.code, time: 2000 });
                        }
                    },
                    btn2: function () {
                        layer.close(index);
                    },
                    success: function (layero, index) {

                    },
                })
                layui.layer.full(index);
                //改变窗口大小时，重置弹窗的宽高，防止超出可视区域（如F12调出debug的操作）
                $(window).on("resize", function () {
                    layui.layer.full(index);
                })
                break;
            case 'Add':
                var index = layui.layer.open({
                    title: "新增",
                    type: 2,
                    area: ['100%', '100%'],
                    content: "/PlanBatchInfo/Create",
                    btnAlign: 'c',
                    btn: ['保存', '取消'],
                    yes: function () {
                        var iframeWin = $("div.layui-layer-content > iframe")[0].contentWindow; //获取子页面对象
                        iframeWin.Save();
                        var result = iframeWin.result;
                        if (result) {
                            if (result.code == 1) {
                                layer.close(index);
                                Reload();
                            }

                            layer.msg(result.msg, { icon: result.code, time: 2000 });
                        }
                    },
                    success: function (layero, index) {

                    }
                })
                //layui.layer.full(index);
                //改变窗口大小时，重置弹窗的宽高，防止超出可视区域（如F12调出debug的操作）
                $(window).on("resize", function () {
                    layui.layer.full(index);
                })
                break;
            case 'BatchSave':
                var data = checkStatus.data;
                if (data && data.length > 0) {
                    var planBatchStr = JSON.stringify(data);
                    var ajax = {
                        url: '/PlanBatchInfo/BatchSave',
                        type: 'POST',
                        async: false,
                        data: { planBatchStr: planBatchStr },
                        dataType: "json",
                        success: function (data) {
                            if (data && data.code == "1") {
                                layer.msg(data.msg, { icon: data.code, time: 2000 });
                                Reload();
                            }
                            else {
                                layer.msg("保存失败！", { icon: 0, time: 2000 });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                        }
                    }
                    $.ajax(ajax);
                }
                break;
            case 'BatchRemove':
                var data = checkStatus.data;
                if (data && data.length > 0) {
                    layer.confirm('真的删除行么', function (index) {
                        var idArr = [];
                        $.each(data, function () {
                            idArr.push(this.Phid);
                        });
                        if (idArr.length > 0) {
                            var ids = idArr.join(',');
                            var ajax = {
                                url: '/PlanBatchInfo/BatchDelete?ids=' + ids,
                                type: 'get',
                                async: false,
                                dataType: "json",
                                success: function (data) {
                                    if (data && data.code == "1") {
                                        layer.msg(data.msg, { icon: data.code, time: 2000 });
                                        Reload();
                                    }
                                    else {
                                        layer.msg("保存失败！", { icon: 0, time: 2000 });
                                    }
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                }
                            }
                            $.ajax(ajax);
                        }
                    });

                    layer.close(index);
                }

                break;
            case 'LAYTABLE_EXPORT':
                var data = checkStatus.data;
                if (data && data.length == 0) {
                    data = tableData;
                }
                table.exportFile(obj.config.id, data,'xls');
                break;
        };
    });

    //监听行工具事件
    table.on('tool(dt)', function (obj) {
        var data = obj.data;
        if (obj.event === 'del') {
            layer.confirm('真的删除行么', function (index) {
                obj.del();
                $.ajax({
                    type: 'POST',
                    url: '/PlanBatchInfo/BatchDelete?ids=' + obj.data.Phid,
                    dataType: "json",
                    success: function (data) {
                        if (data && data.code == "1") {
                            layer.msg(data.msg, { icon: data.code, time: 2000 });
                        }
                        else {
                            layer.msg("删除失败！", { icon: 0, time: 2000 });
                        }
                    }
                });
                layer.close(index);
            });
        } else if (obj.event === 'save') {
            if (data) {
                var arr = [];
                arr.push(data);
                var planBatchStr = JSON.stringify(arr);
                var ajax = {
                    url: '/PlanBatchInfo/BatchSave',
                    type: 'POST',
                    async: false,
                    data: { planBatchStr: planBatchStr },
                    dataType: "json",
                    success: function (data) {
                        if (data && data.code == "1") {
                            layer.msg(data.msg, { icon: data.code, time: 2000 });
                        }
                        else {
                            layer.msg("保存失败！", { icon: 0, time: 2000 });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    }
                }
                $.ajax(ajax);
            }
        }
    });

    function Reload() {
        table.reload("dt", {
            page: {
                curr: 1 //重新从第 1 页开始
            },
            where: {
                PlanBatch: $("#PlanBatch").val(),
                PlanName: $("#PlanName").val(),
                CityPlace: $("#CityPlace").val(),
                BidMode: $("#BidMode").val(),
                BuildWay: $("#BuildWay").val(),
                BidYear: $("#BidYear").val(),
                PlanStartDt: $("#PlanStartDt").val(),
                PlanEndDt: $("#PlanEndDt").val()
            }
        })
    }

    function Clear() {
        $("#PlanBatch").val("");
        $("#PlanName").val("");
        $("#CityPlace").val("");
        $("#BidMode").val("");
        $("#BuildWay").val("");
        $("#BidYear").val("");
        $("#PlanStartDt").val("");
        $("#PlanEndDt").val()
    }

</script>
